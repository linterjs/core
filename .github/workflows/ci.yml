name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [12.x, 14.x]
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set node version to ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Versions
        run: yarn versions

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check outdated dependencies
        run: yarn outdated
        continue-on-error: true

      - name: Lint code
        run: yarn lint

      - name: Audit dependencies
        run: yarn audit --groups dependencies

      # - name: Audit devDependencies
      #   run: yarn audit --groups devDependencies

      # - name: Audit peerDependencies
      #   run: yarn audit --groups peerDependencies

      # - name: Audit optionalDependencies
      #   run: yarn audit --groups optionalDependencies

      - name: Build
        run: yarn build

      - name: Run unit tests
        run: yarn test
        env:
          CI: true

      - name: Publish code coverage report
        uses: paambaati/codeclimate-action@v2.2.4
        if: matrix.os == 'ubuntu-latest' && matrix.node == '12.x'
        with:
          coverageCommand: yarn test
